
resources的作用：
	指定文件加载的类路径下。
	ｍａｖｅｎ去解析文件。
	<profiles>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<id>prod</id>
			<properties>
				<db.driverClass>com.mysql.jdbc.Driver</db.driverClass>
				<db.username>jx_mall</db.username>
				<db.password>Jx@11M.29alL</db.password>
				<db.url>jdbc:mysql://172.16.200.236:3306/jx_mall</db.url>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>jp-api</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<webResources>
							<webResource>
								当web资源文件内使用maven属性时，也可以如此定义，类似resource,开启资源过滤。
								<directory>src/main/webapp</directory>
								<filtering>true</filtering>
								<include>**/*.css</include>
								<include>**/*.js</include>
							</webResource>
						</webResources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<resources>
			<resource>
				resource下的配置文件如果用了maven的属性，为了maven回去解析这个配置文件，在这里配置需要被maven解析的配置文件
				总结：让maven解析配置文件中maven属性。开启资源过滤
				插件默认行为：maven-resource-plugin将资源文件从项目中复制到项目编译输出目录下（默认target/classes）
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>